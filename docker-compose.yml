version: "3.8"

services:

  backend:
    container_name: backend
    restart: always
    depends_on:
      - mongodb
      - mongo-express
    build:
      context: .
    ports:
      - "5000:5000"
    environment:
      LOG_FILE: /app/logs/backend.log
      MONGO_USERNAME: admin
      MONGO_PASSWORD: admin
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      JAEGER_HOST: jaeger
    volumes:
      - ./logs/:/app/logs/:rw

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: elastic-stack
    volumes:
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express
    restart: always
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    restart: always
    depends_on:
      - backend
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "9090:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    depends_on:
      - backend
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9091:9090"

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    ports:
      - "9092:3000"
    environment:
      GF_SECURITY_ADMIN_USER: root
      GF_SECURITY_ADMIN_PASSWORD: root
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/data/grafana_data:/var/lib/grafana

#  logstash:
#    image: logstash:7.14.2
#    container_name: logstash
#    restart: always
#    depends_on:
#      - elasticsearch
#    volumes:
#      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
#      - ./logs/:/app/logs/:ro
#
#  elasticsearch:
#    image: elasticsearch:7.14.2
#    container_name: elasticsearch
#    restart: always
#    depends_on:
#      - backend
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    environment:
#      - "discovery.type=single-node"
#
#  kibana:
#    image: kibana:7.14.2
#    container_name: kibana
#    restart: always
#    depends_on:
#      - logstash
#    ports:
#      - "9093:5601"
#    environment:
#      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
#      - "discovery.type=single-node"
